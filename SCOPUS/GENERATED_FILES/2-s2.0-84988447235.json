{"Title": "Simulation and invariance for weak consistency", "Year": 2016, "Source": "Lect. Notes Comput. Sci.", "Volume": "9837 LNCS", "Issue": null, "Art.No": null, "PageStart": 3, "PageEnd": 22, "CitedBy": 2, "DOI": "10.1007/978-3-662-53413-7_1", "Link": "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84988447235&origin=inward", "Abstract": "\u00a9 Springer-Verlag GmbH Germany 2016.We aim at developing correct algorithms for a wide variety of weak consistency models M0, \u2026, Mn. Given an algorithm A and a con- sistency model M \u2208 {M0, \u2026, Mn}, at quite a high-level examining the correctness of the algorithm A under M amounts to asking, for example, \u201ccan these executions happen?\u201d, or \u201care these the only possible execu- tions?\u201d. Since a few years, Luc Maranget and myself have been designing and developing the herd7 simulation tool: given a litmus test, i.e. a small piece of code and a consistency model, i.e. a set of constraints defining the valid executions of a program, the herd7 tool outputs all the possi- ble executions of the litmus test under the consistency model. In recent works with Patrick Cousot, we have developed an invariance method for proving the correctness of algorithms under weak consistency models. In this paper I would like to give a general overview of these works.", "AuthorKeywords": null, "IndexKeywords": ["Consistency model", "Litmus test", "Weak consistency"], "DocumentType": "Book Series", "PublicationStage": null, "OpenAccess": 0, "EID": "2-s2.0-84988447235", "SubjectAreas": [["Theoretical Computer Science", "MATH", "2614"], ["Computer Science (all)", "COMP", "1700"]], "AuthorData": {"26667536700": {"Name": "Alglave J.", "AuthorID": "26667536700", "AffiliationID": "60022148", "AffiliationName": "University College London"}}}