{"Title": "What are your programming language's energy-delay implications?", "Year": 2018, "Source": "Proc Int Conf Software Eng", "Volume": null, "Issue": null, "Art.No": null, "PageStart": 303, "PageEnd": 313, "CitedBy": 4, "DOI": "10.1145/3196398.3196414", "Link": "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85051623419&origin=inward", "Abstract": "\u00a9 2018 ACM.Motivation: Even though many studies examine the energy efficiency of hardware and embedded systems, those that investigate the energy consumption of software applications are still limited, and mostly focused on mobile applications. As modern applications become even more complex and heterogeneous a need arises for methods that can accurately assess their energy consumption. Goal: Measure the energy consumption and run-time performance of commonly used programming tasks implemented in different programming languages and executed on a variety of platforms to help developers to choose appropriate implementation platforms. Method: Obtain measurements to calculate the Energy Delay Product, a weighted function that takes into account a task's energy consumption and run-time performance. We perform our tests by calculating the Energy Delay Product of 25 programming tasks, found in the Rosetta Code Repository, which are implemented in 14 programming languages and run on three different computer platforms, a server, a laptop, and an embedded system. Results: Compiled programming languages are outperforming the interpreted ones for most, but not for all tasks. C, C#, and JavaScript are on average the best performing compiled, semi-compiled, and interpreted programming languages for the Energy Delay Product, and Rust appears to be well-placed for i/o-intensive operations, such as file handling. We also find that a good behaviour, energy-wise, can be the result of clever optimizations and design choices in seemingly unexpected programming languages.", "AuthorKeywords": ["energy-delay-product", "energy-efficiency", "programming languages"], "IndexKeywords": ["Computer platforms", "Energy delay product", "Implementation platforms", "Interpreted programming language", "Mobile applications", "Modern applications", "Run-time performance", "Software applications"], "DocumentType": "Conference Proceeding", "PublicationStage": null, "OpenAccess": 2, "EID": "2-s2.0-85051623419", "SubjectAreas": [["Software", "COMP", "1712"]], "AuthorData": {"56988937100": {"Name": "Georgiou S.", "AuthorID": "56988937100", "AffiliationID": "60019507", "AffiliationName": "Athens University of Economics and Business"}, "17343724600": {"Name": "Louridas P.", "AuthorID": "17343724600", "AffiliationID": "60019507", "AffiliationName": "Athens University of Economics and Business"}, "35566637400": {"Name": "Spinellis D.", "AuthorID": "35566637400", "AffiliationID": "60019507", "AffiliationName": "Athens University of Economics and Business"}, "36634273100": {"Name": "Kechagia M.", "AuthorID": "36634273100", "AffiliationID": "60006288", "AffiliationName": "Delft University of Technology"}}}