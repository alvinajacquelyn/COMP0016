{"Title": "Efficient and accurate parallel inversion of the gamma distribution", "Year": 2015, "Source": "Siam J. Sci. Comput.", "Volume": "37", "Issue": 1, "Art.No": null, "PageStart": null, "PageEnd": null, "CitedBy": 4, "DOI": "10.1137/14095875X", "Link": "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84923874319&origin=inward", "Abstract": "\u00a9 2015 Society for Industrial and Applied Mathematics.A method for parallel inversion of the gamma distribution is described. This is very desirable for random number generation in Monte Carlo simulations where gamma variates are required. Let \u03b1 be a fixed but arbitrary positive real number. Explicitly, given a list of uniformly distributed random numbers our algorithm applies the quantile function (inverse CDF) of the gamma distribution with shape parameter \u03b1 to each element. The result is, therefore, a list of random numbers distributed according to the said distribution. The output of our algorithm has accuracy close to a choice of single- or double-precision machine epsilon. Inversion of the gamma distribution is traditionally accomplished using some form of root finding. This is known to be computationally expensive. Our algorithm departs from this paradigm by using an initialization phase to construct, on the fly, a piecewise Chebyshev polynomial approximation to a transformation function, which can be evaluated very quickly during variate generation. The Chebyshev polynomials are high order, for good accuracy, and generated via recurrence relations derived from nonlinear second order ODEs. A novelty of our approach is that the same change of variable is applied to each uniform random number before evaluating the transformation function. This is particularly amenable to implementation on SIMD architectures, whose performance is sensitive to frequently diverging execution flows due to conditional statements (branch divergence). We show the performance of a CUDA GPU implementation of our algorithm (called Quantus) is within an order of magnitude of the time to compute the normal quantile function.", "AuthorKeywords": ["Copula", "CUDA", "Gamma distribution", "GPU", "Inverse CDF", "Monte Carlo", "Parallel inversion", "Quantile function", "Quantile mechanics", "Quantus"], "IndexKeywords": ["Copula", "CUDA", "Gamma distribution", "GPU", "Inverse CDF", "Parallel inversion", "Quantile functions", "Quantus"], "DocumentType": "Journal", "PublicationStage": null, "OpenAccess": 2, "EID": "2-s2.0-84923874319", "SubjectAreas": [["Computational Mathematics", "MATH", "2605"], ["Applied Mathematics", "MATH", "2604"]], "AuthorData": {"56071234600": {"Name": "Luu T.", "AuthorID": "56071234600", "AffiliationID": "60022148", "AffiliationName": "Department of Mathematics, University College London"}}}