{"Title": "Specifying and verifying concurrent algorithms with histories and subjectivity", "Year": 2015, "Source": "Lect. Notes Comput. Sci.", "Volume": "9032", "Issue": null, "Art.No": null, "PageStart": 333, "PageEnd": 358, "CitedBy": 26, "DOI": "10.1007/978-3-662-46669-8_14", "Link": "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84926675238&origin=inward", "Abstract": "\u00a9 Springer-Verlag Berlin Heidelberg 2015.We present a lightweight approach to Hoare-style specifications for fine-grained concurrency, based on a notion of time-stamped histories that abstractly capture atomic changes in the program state. Our key observation is that histories forma partial commutative monoid, a structure fundamental for representation of concurrent resources. This insight provides us with a unifying mechanism that allows us to treat histories just like heaps in separation logic. For example, both are subject to the same assertion logic and inference rules (e.g., the frame rule). Moreover, the notion of ownership transfer, which usually applies to heaps, has an equivalent in histories. It can be used to formally represent helping\u2014an important design pattern for concurrent algorithms whereby one thread can execute code on behalf of another. Specifications in terms of histories naturally abstract away the internal interference, so that sophisticated fine-grained algorithms can be given the same specifications as their simplified coarse-grained counterparts, making them equally convenient for client-side reasoning. We illustrate our approach on a number of examples and validate all of them in Coq.", "AuthorKeywords": null, "IndexKeywords": ["Atomic changes", "Commutative-monoid", "Concurrent algorithms", "Design Patterns", "Fine-grained concurrency", "Inference rules", "Ownership transfers", "Separation logic"], "DocumentType": "Book Series", "PublicationStage": null, "OpenAccess": 2, "EID": "2-s2.0-84926675238", "SubjectAreas": [["Theoretical Computer Science", "MATH", "2614"], ["Computer Science (all)", "COMP", "1700"]], "AuthorData": {"35114020100": {"Name": "Sergey I.", "AuthorID": "35114020100", "AffiliationID": "60121727", "AffiliationName": "IMDEA Software Institute"}, "15047125400": {"Name": "Nanevski A.", "AuthorID": "15047125400", "AffiliationID": "60121727", "AffiliationName": "IMDEA Software Institute"}, "8558971000": {"Name": "Banerjee A.", "AuthorID": "8558971000", "AffiliationID": "60121727", "AffiliationName": "IMDEA Software Institute"}}}