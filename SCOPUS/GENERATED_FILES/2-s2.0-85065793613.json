{"Title": "Mamadroid: Detecting android malware by building Markov chains of behavioral models (extended version)", "Year": 2019, "Source": "ACM Trans. Priv. Secur.", "Volume": "22", "Issue": 2, "Art.No": null, "PageStart": null, "PageEnd": null, "CitedBy": 31, "DOI": "10.1145/3313391", "Link": "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85065793613&origin=inward", "Abstract": "\u00a9 2019 Copyright held by the owner/author(s). Publication rights licensed to ACM.As Android has become increasingly popular, so has malware targeting it, thus motivating the research community to propose different detection techniques. However, the constant evolution of the Android ecosystem, and of malware itself, makes it hard to design robust tools that can operate for long periods of time without the need for modifications or costly re-training. Aiming to address this issue, we set to detect malware from a behavioral point of view, modeled as the sequence of abstracted API calls. We introduce MaMaDroid, a static-analysis-based system that abstracts app's API calls to their class, package, or family, and builds a model from their sequences obtained from the call graph of an app as Markov chains. This ensures that the model is more resilient to API changes and the features set is of manageable size. We evaluate MaMaDroid using a dataset of 8.5K benign and 35.5K malicious apps collected over a period of 6 years, showing that it effectively detects malware (with up to 0.99 F-measure) and keeps its detection capabilities for long periods of time (up to 0.87 F-measure 2 years after training). We also show that MaMaDroid remarkably overperforms DroidAPIMiner, a state-of-the-art detection system that relies on the frequency of (raw) API calls. Aiming to assess whether MaMaDroid's effectiveness mainly stems from the API abstraction or from the sequencing modeling, we also evaluate a variant of it that uses frequency (instead of sequences), of abstracted API calls. We find that it is not as accurate, failing to capture maliciousness when trained on malware samples that include API calls that are equally or more frequently used by benign apps.", "AuthorKeywords": ["Android", "Malware detection", "Static analysis"], "IndexKeywords": ["Android", "Behavioral model", "Detection capability", "Detection system", "Extended versions", "Malware detection", "Research communities", "State of the art"], "DocumentType": "Journal", "PublicationStage": null, "OpenAccess": 2, "EID": "2-s2.0-85065793613", "SubjectAreas": [["Computer Science (all)", "COMP", "1700"], ["Safety, Risk, Reliability and Quality", "ENGI", "2213"]], "AuthorData": {"57188644050": {"Name": "Onwuzurike L.", "AuthorID": "57188644050", "AffiliationID": "60022148", "AffiliationName": "Department of Computer Science, University College London"}, "57189589235": {"Name": "Mariconti E.", "AuthorID": "57189589235", "AffiliationID": "60022148", "AffiliationName": "Department of Computer Science, University College London"}, "17433897300": {"Name": "De Cristofaro E.", "AuthorID": "17433897300", "AffiliationID": "60022148", "AffiliationName": "Department of Computer Science, University College London"}, "57213723422": {"Name": "Ross G.", "AuthorID": "57213723422", "AffiliationID": "60022148", "AffiliationName": "Department of Computer Science, University College London"}, "55598108100": {"Name": "Andriotis P.", "AuthorID": "55598108100", "AffiliationID": "60019611", "AffiliationName": "Department of Computer Science and Creative Technologies, University of the West of England"}, "36810977700": {"Name": "Stringhini G.", "AuthorID": "36810977700", "AffiliationID": "60019674", "AffiliationName": "Department of Electrical and Computer Engineering, University of Boston"}}}