{"Title": "Practical coinduction", "Year": 2017, "Source": "Math. Struct. Comput. Sci.", "Volume": "27", "Issue": 7, "Art.No": null, "PageStart": 1132, "PageEnd": 1152, "CitedBy": 11, "DOI": "10.1017/S0960129515000493", "Link": "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84957801978&origin=inward", "Abstract": "Copyright \u00a9 Cambridge University Press 2016.Induction is a well-established proof principle that is taught in most undergraduate programs in mathematics and computer science. In computer science, it is used primarily to reason about inductively defined datatypes such as finite lists, finite trees and the natural numbers. Coinduction is the dual principle that can be used to reason about coinductive datatypes such as infinite streams or trees, but it is not as widespread or as well understood. In this paper, we illustrate through several examples the use of coinduction in informal mathematical arguments. Our aim is to promote the principle as a useful tool for the working mathematician and to bring it to a level of familiarity on par with induction. We show that coinduction is not only about bisimilarity and equality of behaviors, but also applicable to a variety of functions and relations defined on coinductive datatypes.", "AuthorKeywords": null, "IndexKeywords": ["Bisimilarity", "Coinduction", "Datatypes", "Finite trees", "Natural number", "Undergraduate program"], "DocumentType": "Journal", "PublicationStage": null, "OpenAccess": 2, "EID": "2-s2.0-84957801978", "SubjectAreas": [["Mathematics (miscellaneous)", "MATH", "2601"], ["Computer Science Applications", "COMP", "1706"]], "AuthorData": {"7003651436": {"Name": "Kozen D.", "AuthorID": "7003651436", "AffiliationID": "60007776", "AffiliationName": "Computer Science, Cornell University"}, "23398564400": {"Name": "Silva A.", "AuthorID": "23398564400", "AffiliationID": "60016529", "AffiliationName": "Intelligent Systems, Radboud University Nijmegen"}}}