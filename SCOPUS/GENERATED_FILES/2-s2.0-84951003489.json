{"Title": "On energy-efficient computations with advice", "Year": 2015, "Source": "Lect. Notes Comput. Sci.", "Volume": "9198", "Issue": null, "Art.No": null, "PageStart": 747, "PageEnd": 758, "CitedBy": 1, "DOI": "10.1007/978-3-319-21398-9_58", "Link": "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=84951003489&origin=inward", "Abstract": "\u00a9 Springer International Publishing Switzerland 2015.Online problems have always played an important role in computer science. Here, not the whole input is known at the beginning, but it is only revealed gradually. These problems frequently occur in practice, and therefore the performance of algorithms for such problems is of great theoretical and practical interest. One such online problem is energy management in electronic devices, e. g., smartphones. As such a device is usually not being used permanently, it is reasonable to change to a lower-energy state (like hibernation) after a certain idle time. Resuming from hibernation, however, also needs a certain amount of energy; therefore, hibernation should only happen if the idle period is long. Advice complexity is a recent approach for measuring the information content of an online problem, i. e., the amount of knowledge about the future parts of the input that is necessary to compute a high-quality solution. The approach allows for a more fine-grained analysis of the hardness of online problems than the classical competitive analysis. We analyze the advice complexity of this problem. For systems with two states, we construct an online algorithm with advice that is 1.8-competitive with one advice bit and 1.6-competitive with five advice bits, whereas every deterministic algorithm without advice is known to be no better than 2-competitive. Moreover, the algorithm\u2019s competitive ratio converges fast towards e/(e-1) with an increasing number of advice bits. For competitive ratios in the range [1, e/(e-1)], we present two complementary algorithms: one behaves optimally on a certain prefix, and the other falls asleep on the longest phases. Conversely, we show that every algorithm with a competitive ratio less than 1 + 1/(4w + 2), where w is the wake-up energy, needs to read a linear number of advice bits.", "AuthorKeywords": null, "IndexKeywords": ["Advice complexity", "Competitive analysis", "Deterministic algorithms", "Fine-grained analysis", "High-quality solutions", "Information contents", "On-line algorithms", "Performance of algorithm"], "DocumentType": "Book Series", "PublicationStage": null, "OpenAccess": 2, "EID": "2-s2.0-84951003489", "SubjectAreas": [["Theoretical Computer Science", "MATH", "2614"], ["Computer Science (all)", "COMP", "1700"]], "AuthorData": {"6603424152": {"Name": "B\u00f6ckenhauer H.J.", "AuthorID": "6603424152", "AffiliationID": "60025858", "AffiliationName": "Department of Computer Science, ETH Z\u00fcrich"}, "54904816900": {"Name": "Krug S.", "AuthorID": "54904816900", "AffiliationID": "60025858", "AffiliationName": "Department of Computer Science, ETH Z\u00fcrich"}, "57219235156": {"Name": "Dobson R.", "AuthorID": "57219235156", "AffiliationID": "60011520", "AffiliationName": "Department of Informatics, King\u2019s College London"}, "23391131500": {"Name": "Steinh\u00f6fel K.", "AuthorID": "23391131500", "AffiliationID": "60011520", "AffiliationName": "Department of Informatics, King\u2019s College London"}}}